# Maintainer (AUR): Marco Huenseler <marco@wuthoehle.de>

# Upstream:
# Maintainer : Christian Hesse <mail@eworm.de>
# Maintainer : Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Ronald van Haren <ronald.archlinux.org>
# Contributor: Keshav Amburay <(the ddoott ridikulus ddoott rat) (aatt) (gemmaeiil) (ddoott) (ccoomm)>

pkgname='grub-blscfg'
pkgdesc='GNU GRand Unified Bootloader (2) with Fedoras blscfg patch'
epoch=2
_pkgver=2.12
_unifont_ver=16.0.04
#pkgver=${_pkgver/-/}
# the pkgver for git master is generated with:
# git describe --abbrev=8 | sed 's|grub-||;s|-|.r|;s|-|.|'
pkgver=2.12.r359.g19c698d12
pkgrel=1
url='https://www.gnu.org/software/grub/'
arch=('x86_64')
license=('GPL-3.0-or-later')
backup=(
  etc/default/grub
  etc/grub.d/40_custom
)
install="grub.install"
conflicts=(
  grub
  grub-bios
  grub-common
  grub-efi-x86_64
  grub-emu
  grub-legacy
)
replaces=(
  grub
  grub-common
  grub-bios
  grub-emu 
  grub-efi-x86_64
)
provides=(
  grub
  grub-bios
  grub-common
  grub-efi-x86_64
  grub-emu
)
makedepends=(
  autogen
  device-mapper
  freetype2
  fuse3
  gettext
  git
  help2man
  libusb
  python
  rsync
  sdl
  texinfo
  ttf-dejavu
  xz
)
depends=(
  device-mapper
  gettext
  sh
  xz
)
optdepends=(
  'dosfstools: For grub-mkrescue FAT FS and EFI support'
  'efibootmgr: For grub-install EFI support'
  'freetype2: For grub-mkfont usage'
  'fuse3: For grub-mount usage'
  'libisoburn: Provides xorriso for generating grub rescue iso using grub-mkrescue'
  'libusb: For grub-emu USB support'
  'lzop: For grub-mkrescue LZO support'
  'mtools: For grub-mkrescue FAT FS support'
  'os-prober: To detect other OSes when generating grub.cfg in BIOS systems'
  'sdl: For grub-emu SDL support'
)
validpgpkeys=(
  'E53D497F3FA42AD8C9B4D1E835A93B74E82E4209'  # Vladimir 'phcoder' Serbinenko <phcoder@gmail.com>
  'BE5C23209ACDDACEB20DB0A28C8189F1988C2166'  # Daniel Kiper <dkiper@net-space.pl>
  '95D2E9AB8740D8046387FD151A09227B1F435A33') # Paul Hardy <unifoundry@unifoundry.com>
source=(
  git+https://git.savannah.gnu.org/git/grub.git#tag=grub-${_pkgver}?signed
  git+https://git.savannah.gnu.org/git/gnulib.git
  https://ftp.gnu.org/gnu/unifont/unifont-${_unifont_ver}/unifont-${_unifont_ver}.bdf.gz{,.sig}
  0001-00_header-add-GRUB_COLOR_-variables.patch
  0002-10_linux-detect-archlinux-initramfs.patch
  0003-support-dropins-for-default-configuration.patch
  0004-po-Update-Translations-to-Build-with-Gettext-0.26.patch
  0005-blscfg-add-blscfg-module-to-parse-Boot-Loader-Specif.patch
  grub.default
  sbat.csv
)
b2sums=('a6cec7271c3ea54a99f02ee6bc0a5825c8be657af68ba9a32b39a5fe8bcb571fb1ba39210426f6bf6a48d913e6e00df37dc2123ea1b39330f4c47bd9dbac9ae3'
        'SKIP'
        'b245a15d9dfab7f4e63bb32281909164d71d66e25c1ece2ceccbee5b2c1b00a46004c478a1b048c1b3efefd212a0b3f1a35a482fb12ef4489e7b7e09effd375a'
        'SKIP'
        '992c71790785304c28fbaf0dba21dab3e283b199509f0e7e1aa0df08126da75e15b6626c3638279ff2ecaa59b925096d7dbd67d6a53cebd0ce4326ff3719d25b'
        'b4cd9ac976a579eca19d54c0b31c8d6324525fe5a0b9f5405deb63845367ac1adaa80ece4c166dfd5304608c41aa44b4f64efe235c03f437523b993be06e06e3'
        'a7820bfe9bddc34af49de63222b3d2a9788367083e29db13b33120269adbfa1619ac421d8597f662f756592889f5cc5538544a17d9936d1420bd5742282c710c'
        '7f41bb41548acae5283969f04ef5311d55de5343ee95ffcc903751d5e25cf5b187c8940de010dd53123086e76e147ba770173b03c36da97a413e9853c1a42ffe'
        '5684ce121d2295b432bff5cf645d9150f91883bc56c244c94640fee3794364f641b1430c69fab38a0fd6f65cf1e08948a2b1839710c21386b924e25917245642'
        '5e42db2161e8f594b82005b26e590a20a0e8d32b01119bdd7b1a7f7c4b0f3360e8730a3ecdd5912a4dc7af5bd9aed1c3e780965ad6747d831b470158da19388d'
        'ce9b3904ce4bd00463c226ab1c97d3af94c6151c408bcd6483a0dd07ae4c343ee135907ad887c1d93525ec95d87409ef703ac7278698d49e99342332e483c436')
_backports=(
  # current git master for loads of security fixes
  # https://lists.gnu.org/archive/html/grub-devel/2025-02/msg00024.html
  "grub-${_pkgver}..19c698d123ae46d7a8fbf425067aff2d10dac8ca"
)

prepare() {
  cd "${srcdir}/grub/"

  echo "Apply backports..."
  local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done

  echo "Apply reverts..."
  local _c _l
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  echo "Patch to enable GRUB_COLOR_* variables in grub-mkconfig..."
  ## Based on http://lists.gnu.org/archive/html/grub-devel/2012-02/msg00021.html
  patch -Np1 -i "${srcdir}/0001-00_header-add-GRUB_COLOR_-variables.patch"

  echo "Patch to detect of Arch Linux initramfs images by grub-mkconfig..."
  patch -Np1 -i "${srcdir}/0002-10_linux-detect-archlinux-initramfs.patch"

  echo "Patch to support dropins for default configuration..."
  patch -Np1 -i "${srcdir}/0003-support-dropins-for-default-configuration.patch"

  echo "Patch to support building with gettext-0.26..."
  patch -Np1 -i "${srcdir}/0004-po-Update-Translations-to-Build-with-Gettext-0.26.patch"

  echo "Patch to support blscfg..."
  patch -Np1 -i "${srcdir}/0005-blscfg-add-blscfg-module-to-parse-Boot-Loader-Specif.patch"

  echo "Fix DejaVuSans.ttf location so that grub-mkfont can create *.pf2 files for starfield theme..."
  sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i "configure.ac"

  echo "Fix mkinitcpio 'rw' FS#36275..."
  sed 's| ro | rw |g' -i "util/grub.d/10_linux.in"

  echo "Fix OS naming FS#33393..."
  sed 's|GNU/Linux|Linux|' -i "util/grub.d/10_linux.in"

  echo "Pull in latest language files..."
  ./linguas.sh

  echo "Avoid problem with unifont during compile of grub..."
  # http://savannah.gnu.org/bugs/?40330 and https://bugs.archlinux.org/task/37847
  gzip -cd "${srcdir}/unifont-${_unifont_ver}.bdf.gz" > "unifont.bdf"

  echo "Run bootstrap..."
  ./bootstrap --gnulib-srcdir="${srcdir}/gnulib"

  echo "Make translations reproducible..."
  sed -i '1i /^PO-Revision-Date:/ d' po/*.sed
}

_configure_options=(
  --prefix="/usr"
  --bindir="/usr/bin"
  --sbindir="/usr/bin"
  --mandir="/usr/share/man"
  --infodir="/usr/share/info"
  --datarootdir="/usr/share"
  --sysconfdir="/etc"
  --program-prefix=""
  --with-bootdir="/boot"
  --with-grubdir="grub"
  --enable-boot-time
  --enable-cache-stats
)

_platform=(
  i386-pc
  i386-efi
  x86_64-efi
)

build() {
  for i in ${_platform[@]}; do
    echo "Unset CFLAGS for build..."
    unset CFLAGS
    cp -r "${srcdir}/grub" "${srcdir}/grub-${i}"
    cd "${srcdir}/grub-${i}"
    echo "Run ./configure for ${i} build..."
    [[ "${i}" == "i386-pc" ]] && _configure_options+=(--enable-efiemu --with-platform="pc" --target="i386")
    [[ "${i}" == "i386-efi" ]] && _configure_options+=(--disable-efiemu --with-platform="efi" --target="i386")
    [[ "${i}" == "x86_64-efi" ]] && _configure_options+=(--with-platform="efi" --target="x86_64")
    ./configure PACKAGE_VERSION="${epoch}:${pkgver}-${pkgrel}" \
                ${_configure_options[@]}
    if [[ "${i}" == "x86_64-efi" ]]; then
      echo "Build language and doc files only for most common variant..."
      # language directory does not like -j option, build it first with -j1
      make -j1 po/
    else
      sed -i -e 's#po docs##' Makefile
    fi
    echo "Run make for ${i} build..."
    make
    if [ ! -z "${SOURCE_DATE_EPOCH}" ]; then
      echo "Make info pages reproducible..."
      touch -d "@${SOURCE_DATE_EPOCH}" $(find -name '*.texi')
    fi
  done
}

package() {
  for i in ${_platform[@]}; do
    cd "${srcdir}/grub-${i}"
    echo "Run make install for ${i} build..."
    make DESTDIR="${pkgdir}/" bashcompletiondir="/usr/share/bash-completion/completions" install
    echo "Remove gdb debugging related files for ${i}..."
    rm -f "${pkgdir}/usr/lib/grub/${i}"/*.module
    rm -f "${pkgdir}/usr/lib/grub/${i}"/*.image
    rm -f "${pkgdir}/usr/lib/grub/${i}"/{kernel.exec,gdb_grub,gmodule.pl}
  done
  echo "Install /etc/default/grub (used by grub-mkconfig)..."
  install -D -m0644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"
  sed -e "s/%PKGVER%/${epoch}:${pkgver}-${pkgrel}/" < "${srcdir}/sbat.csv" > "${pkgdir}/usr/share/grub/sbat.csv"
}
