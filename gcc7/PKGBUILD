# Maintainer:  Chris Severance aur.severach aATt spamgourmet dott com
# Contributor: Maintainer: David (ReyJamonico) < david at rjamo dot dev >
# Contributor: Viktor Drobot (aka dviktor) linux776 [at] gmail [dot] com
# Contributor: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: Konstantin Gizdov <arch@kge.pw>
# Contributor: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: libtool requires rebuilt with each new gcc version

set -u
pkgbase='gcc7'
pkgname=("${pkgbase}" "${pkgbase}-libs" "${pkgbase}-fortran")
pkgver='7.5.0'
_islver='0.18'
_majorver="${pkgver: 0:1}"
pkgrel='4'
pkgdesc="The GNU Compiler Collection (${_majorver}.x.x)"
arch=('x86_64')
url='https://gcc.gnu.org'
license=('GPL-2.0-only' 'LGPL-2.1-only' 'GPL-3.0-only' 'LGPL-3.0-only' 'GFDL-1.3-only' 'custom')
depends=('glibc' 'gcc-libs' 'binutils' 'python' 'zlib')
makedepends=('libmpc' 'doxygen' 'python' 'subversion' 'flex')
options=('!emptydirs' '!strip' '!buildflags')
options+=('!lto')
source=(
  "https://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.xz"
  "https://gcc.gnu.org/pub/gcc/infrastructure/isl-${_islver}.tar.bz2"
  'bz84080.patch' # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=84080
  'libsanitizer.patch' # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=92154
  '78_all-libsanitizer-Fix-build-with-glibc-2.42.patch'
  '79_all-sanitizer_common-Remove-reference-to-obsolete-termio.patch'
)
md5sums=('79cb8a65d44dfc8a2402b46395535c9a'
         '11436d6b205e516635b666090b94ab32'
         '24a71c582be43ab474368ceddd9b7fe1'
         'd9382b276c6a21a8435d0e7e42fab5d4'
         'b85621bb4a415e603eb9911a570143fb'
         '8bcb00f42f2802e0db441812c0b6fa2b')
sha256sums=('b81946e7f01f90528a1f7352ab08cc602b9ccc05d4e44da4bd501c5a189ee661'
            '6b8b0fd7f81d0a957beb3679c81bbb34ccc7568d5682844d8924424a0dadcb1b'
            '2329b4f8b015898d0b78c274d878028d529e00acf59743a33dcd299d2e11bee8'
            '301912f0c272771eb0cc49436e5c9957e5012e50fbb006794b9d535294d39852'
            '94f3a21d25796d102d8e17cb49bdb9fb7b3a67cd2faf4579cd2a572cf12e2346'
            '1c13b65e7219e0a41319d1bb4af8d612f21ad384ce4f527364931f481faf5229')

if ! :; then
_svnrev=266882
_svnurl=svn://gcc.gnu.org/svn/gcc/branches/gcc-${_majorver}-branch

snapshot() {
  svn export -r"${_svnrev}" "${_svnurl}" "gcc-r${_svnrev}"

  local datestamp basever _pkgver
  basever="$(< gcc-r${_svnrev}/gcc/BASE-VER)"
  datestamp="$(< gcc-r${_svnrev}/gcc/DATESTAMP)"
  _pkgver="${basever}-${datestamp}"

  mv "gcc-r${_svnrev}" "gcc-${_pkgver}"
  tar -cf - "gcc-${_pkgver}" | xz > "gcc-${_pkgver}.tar.xz"
  rm -rf "gcc-${_pkgver}"
  gpg -b "gcc-${_pkgver}.tar.xz"
  scp "gcc-${_pkgver}.tar.xz"{,.sig} "sources.archlinux.org:/srv/ftp/other/gcc/"

  echo
  echo "pkgver=${_pkgver/-/+}"
}
fi

if [ -n "${_snapshot:-}" ]; then
  _basedir="gcc-${_snapshot}"
else
  _basedir="gcc-${pkgver}"
fi

_fn_setlibdir() {
  _libdir="usr/lib/gcc/${CHOST}/${pkgver%%+*}"
}

prepare() {
  set -u
  cd "${_basedir}"

  # link isl for in-tree build
  ln -s "../isl-${_islver}" 'isl'

  # Do not run fixincludes
  sed -e 's@\./fixinc\.sh@-c true@' -i 'gcc/Makefile.in'

  # Arch Linux installs x86_64 libraries /lib
  case "${CARCH}" in
  'x86_64') sed -e '/m64=/ s/lib64/lib/' -i 'gcc/config/i386/t-linux64' ;;
  esac

  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -e '/ac_cpp=/ s/$CPPFLAGS/$CPPFLAGS -O2/' -i {libiberty,gcc}/configure

  # Apply patches
  local _pt
  for _pt in "${source[@]%%::*}"; do
    _pt="${_pt##*/}"
    case "${_pt}" in
    *.patch)
      set +u; msg2 "*** Applying patch ${_pt}"; set -u
      patch --no-backup-if-mismatch -Np1 -i "${srcdir}/${_pt}"
      ;;
    esac
  done

  rm -rf 'gcc-build'
  mkdir 'gcc-build'

  set +u
}

build() {
  set -u
  cd "${_basedir}/gcc-build"

  # using -pipe causes spurious test-suite failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  # -Werror=format-security causes compilation errors with GCC>10
  # And protection flags leave libgcc unusable
  #banned_compile_options=("-pipe" "-Werror=format-security" "-fstack-clash-protection" "-fcf-protection")

  #for option in "${banned_compile_options[@]}"
  #do
  #  CFLAGS=${CFLAGS/$option/}
  #  CXXFLAGS=${CXXFLAGS/$option/}
  #done

  if [ ! -s 'Makefile' ]; then
    # The following options are one per line, mostly sorted so they are easy to diff compare to other gcc packages.
    local _conf=(
      --disable-libssp
      --disable-libstdcxx-pch
      --disable-libunwind-exceptions
      --disable-multilib
      --disable-werror
      --enable-__cxa_atexit
      --enable-checking='release'
      --enable-clocale='gnu'
      --enable-default-pie
      --enable-default-ssp
      --enable-gnu-indirect-function
      --enable-gnu-unique-object
      --enable-install-libiberty
      --enable-languages='c,c++,fortran,lto'
      --enable-libmpx
      --enable-linker-build-id
      --enable-lto
      --enable-plugin
      --enable-shared
      --enable-threads='posix'
      --enable-version-specific-runtime-libs
      --infodir='/usr/share/info'
      --libdir='/usr/lib'
      --libexecdir='/usr/lib'
      --mandir='/usr/share/man'
      --program-suffix="-${_majorver}"
      --with-bugurl="https://aur.archlinux.org/packages/${pkgname}/"
      --with-isl
      --with-linker-hash-style='gnu'
      --with-system-zlib
      --prefix='/usr'
    )
    ../configure "${_conf[@]}"

    #sed -e 's/^STAGE1_CXXFLAGS.*$/& -std=gnu++11/' -i 'Makefile'
  fi

  # The system stdc must be used when gcc links to some system libraries.
  LD_PRELOAD='/usr/lib/libstdc++.so' \
  nice -n1 make -s

  set +u; msg 'Compile complete'; set -u

  # make documentation
  make -s -j1 -C "${CHOST}/libstdc++-v3/doc" 'doc-man-doxygen'
  set +u
}

package_gcc7-libs() {
  set -u
  pkgdesc="Runtime libraries shipped by GCC (${_majorver}.x.x)"
  depends=('glibc>=2.27')
  options+=('!strip')

  cd "${_basedir}/gcc-build"
  LD_PRELOAD='/usr/lib/libstdc++.so' \
  make -j1 -s -C "${CHOST}/libgcc" DESTDIR="${pkgdir}" 'install-shared'
  local _libdir; _fn_setlibdir
  rm -f "${pkgdir}/${_libdir}/libgcc_eh.a"
  mv "${pkgdir}/usr/lib/gcc/${CHOST}/lib/"libgcc_s.so* "${pkgdir}/${_libdir}"

  local _lib _libs=(
    libatomic
    libcilkrts
    libgfortran
    libgomp
    libitm
    libquadmath
    libsanitizer/{a,l,ub,t}san
    libstdc++-v3/src
    libvtv
  )
  for _lib in "${_libs[@]}"; do
    make -j1 -s -C "${CHOST}/${_lib}" DESTDIR="${pkgdir}" 'install-toolexeclibLTLIBRARIES'
  done

  make -j1 -s -C "${CHOST}/libmpx" DESTDIR="${pkgdir}" install
  rm -f "${pkgdir}/${_libdir}/libmpx.spec"

  # Install Runtime Library Exception
  install -Dpm644 '../COPYING.RUNTIME' \
    "${pkgdir}/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION"
  set +u
}

package_gcc7() {
  set -u
  pkgdesc="The GNU Compiler Collection - C and C++ frontends (${_majorver}.x.x)"
  depends=("${pkgbase}-libs=${pkgver}-${pkgrel}" 'binutils>=2.28' 'libmpc')
  options+=('staticlibs')

  cd "${_basedir}/gcc-build"

  LD_PRELOAD='/usr/lib/libstdc++.so' \
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'install-driver' 'install-cpp' 'install-gcc-ar' \
    'c++.install-common' 'install-headers' 'install-plugin' 'install-lto-wrapper'

  local _libdir; _fn_setlibdir
  install -m755 -t "${pkgdir}/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -j1 -s -C "${CHOST}/libgcc" DESTDIR="${pkgdir}" install
  rm -rf "${pkgdir}/usr/lib/gcc/${CHOST}/"lib*

  make -j1 -s -C "${CHOST}/libstdc++-v3/src" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/include" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/libsupc++" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/python" DESTDIR="${pkgdir}" install

  make -j1 -s DESTDIR="${pkgdir}" 'install-libcc1'
  mv "${pkgdir}/usr/lib/"libcc1.so* "${pkgdir}/${_libdir}"
  rm -f "${pkgdir}/${_libdir}/"libstdc++.so*

  make -j1 -s DESTDIR="${pkgdir}" 'install-fixincludes'
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'install-mkheaders'
  make -j1 -s -C 'lto-plugin' DESTDIR="${pkgdir}" install

  make -j1 -s -C "${CHOST}/libcilkrts" DESTDIR="${pkgdir}" install-nodist_{toolexeclib,cilkinclude}HEADERS
  make -j1 -s -C "${CHOST}/libgomp" DESTDIR="${pkgdir}" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -j1 -s -C "${CHOST}/libitm" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'
  make -j1 -s -C "${CHOST}/libquadmath" DESTDIR="${pkgdir}" 'install-nodist_libsubincludeHEADERS'
  make -j1 -s -C "${CHOST}/libsanitizer" DESTDIR="${pkgdir}" install-nodist_{saninclude,toolexeclib}HEADERS
  make -j1 -s -C "${CHOST}/libsanitizer/asan" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'
  make -j1 -s -C "${CHOST}/libmpx" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'

  make -j1 -s -C 'libcpp' DESTDIR="${pkgdir}" install

  # many packages expect this symlink
  ln -s "gcc-${_majorver}" "${pkgdir}/usr/bin/cc-${_majorver}"

  rm -f "${pkgdir}/${_libdir}/"lib{stdc++,gcc_s}.so

  # byte-compile python libraries
  python -m 'compileall' "${pkgdir}/usr/share/gcc-${pkgver%%+*}/"
  python -O -m 'compileall' "${pkgdir}/usr/share/gcc-${pkgver%%+*}/"

  # Install Runtime Library Exception
  install -d "${pkgdir}/usr/share/licenses/${pkgname}/"
  ln -s "/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION" \
    "${pkgdir}/usr/share/licenses/${pkgname}/"

  # Remove conflicting files
  rm -rf "${pkgdir}/usr/share/locale"
  set +u
}

package_gcc7-fortran() {
  set -u
  pkgdesc="Fortran front-end for GCC (${_majorver}.x.x)"
  depends=("${pkgbase}=${pkgver}-${pkgrel}")
  options=('!emptydirs')

  cd "${_basedir}/gcc-build"
  LD_PRELOAD='/usr/lib/libstdc++.so' \
  make -j1 -s -C "${CHOST}/libgfortran" DESTDIR="${pkgdir}" 'install-cafexeclibLTLIBRARIES' \
    install-{toolexeclibDATA,nodist_fincludeHEADERS}
  make -j1 -s -C "${CHOST}/libgomp" DESTDIR="${pkgdir}" 'install-nodist_fincludeHEADERS'
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'fortran.install-common'
  local _libdir; _fn_setlibdir
  install -Dm755 'gcc/f951' "${pkgdir}/${_libdir}/f951"

  ln -s "gfortran-${_majorver}" "${pkgdir}/usr/bin/f95-${_majorver}"

  # Install Runtime Library Exception
  install -d "${pkgdir}/usr/share/licenses/${pkgname}/"
  ln -s "/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION" \
    "${pkgdir}/usr/share/licenses/${pkgname}/"
  set +u
}
set +u
