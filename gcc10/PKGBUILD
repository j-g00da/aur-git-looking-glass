# Maintainer:  Chris Severance aur.severach aATt spamgourmet dott com
# Contributor: Jonathon Fernyhough <jonathon+m2x+dev>
# Contributor: Giancarlo Razzolini <grazzolini@archlinux.org>
# Contributor: Frederik Schwan <freswa at archlinux dot org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>
# Contributor: Daniel Kozak <kozzi11@gmail.com>

set -u
pkgbase='gcc10'
pkgname=("${pkgbase}" "${pkgbase}-libs" "${pkgbase}-fortran")
pkgver='10.5.0'
_majorver="${pkgver%%.*}"
_islver='0.24'
pkgrel='2'
pkgdesc="The GNU Compiler Collection (${_majorver}.x.x)"
arch=('x86_64')
url='https://gcc.gnu.org'
license=('GPL-3.0-or-later' 'LGPL-3.0+' 'GFDL-1.3' 'LicenseRef-custom')
makedepends=('binutils' 'doxygen' 'git' 'libmpc' 'python')
checkdepends=('dejagnu' 'inetutils')
options=('!emptydirs' '!strip' '!buildflags')
options+=('!lto')
source=(
  "https://sourceware.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.xz"{,.sig}
  "https://sourceware.org/pub/gcc/infrastructure/isl-${_islver}.tar.bz2"
  'c89'
  'c99'
  '78_all-libsanitizer-Fix-build-with-glibc-2.42.patch'
  '79_all-sanitizer_common-Remove-reference-to-obsolete-termio.patch'
)
validpgpkeys=(
  'F3691687D867B81B51CE07D9BBE43771487328A9'  # bpiotrowski@archlinux.org
  '86CFFCA918CF3AF47147588051E8B148A9999C34'  # evangelos@foutrelis.com
  '13975A70E63C361C73AE69EF6EEB81F8981C74C7'  # richard.guenther@gmail.com
  'D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62'  # Jakub Jelinek <jakub@redhat.com>
)
md5sums=('c7d1958570fbd1cd859b015774b9987a'
         'SKIP'
         'dd2f7b78e118c25bd96134a52aae7f4d'
         'd5fd2672deb5f97a2c4bdab486470abe'
         'd99ba9f4bd860e274f17040ee51cd1bf'
         '1cf5f363b18a5a9d821cc8f95c4fc823'
         'e0276415c53a136dd94a597558fb1b0d')
b2sums=('9b71761f4015649514677784443886e59733ac3845f7dfaa4343f46327d36c08c403c444b9e492b870ac0b3f2e3568f972b7700a0ef05a497fb4066079b3143b'
        'SKIP'
        '88a178dad5fe9c33be5ec5fe4ac9abc0e075a86cff9184f75cedb7c47de67ce3be273bd0db72286ba0382f4016e9d74855ead798ad7bccb015b853931731828e'
        'a76d19c7830b0a141302890522086fc1548c177611501caac7e66d576e541b64ca3f6e977de715268a9872dfdd6368a011b92e01f7944ec0088f899ac0d2a2a5'
        '02b655b5668f7dea51c3b3e4ff46d5a4aee5a04ed5e26b98a6470f39c2e98ddc0519bffeeedd982c31ef3c171457e4d1beaff32767d1aedd9346837aac4ec3ee'
        '57ce372a8f541d332beedfd6a54d9014f6457a7c486cd3f6f41e3ffbe716b8fa5d18cada4021b5e05a548e1ddcdbf0b11f6ac5b3525e421617df20a0d0fe8dbd'
        '1339c1b5d6e8000824625cdee4f5be2ace66f3b9eb1bbe20e66a4a8a6c02a149b9670da0703b2a4d87494883fbced3ff4408ecc453ee313244361759c0b3bbc1')

if [ -n "${_snapshot:-}" ]; then
  _basedir="gcc-${_snapshot}"
else
  _basedir="gcc-${pkgver}"
fi

_fn_setlibdir() {
  _libdir="usr/lib/gcc/${CHOST}/${pkgver%%+*}"
}

prepare() {
  set -u
  cd "${_basedir}"

  # link isl for in-tree build
  ln -s "../isl-${_islver}" 'isl'

  # Do not run fixincludes
  sed -e 's@\./fixinc\.sh@-c true@' -i 'gcc/Makefile.in'

  # Arch Linux installs x86_64 libraries /lib
  case "${CARCH}" in
  'x86_64') sed -e '/m64=/ s/lib64/lib/' -i 'gcc/config/i386/t-linux64' ;;
  esac

  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -e '/ac_cpp=/s/$CPPFLAGS/$CPPFLAGS -O2/' -i 'gcc/configure'

  # Apply patches
  local _pt
  for _pt in "${source[@]%%::*}"; do
    _pt="${_pt##*/}"
    case "${_pt}" in
    *.patch)
      set +u; msg2 "*** Applying patch ${_pt}"; set -u
      patch --no-backup-if-mismatch -Np1 -i "${srcdir}/${_pt}"
      ;;
    esac
  done

  rm -rf 'gcc-build'
  mkdir 'gcc-build'

  set +u
}

build() {
  set -u
  cd "${_basedir}/gcc-build"

  if [ ! -s 'Makefile' ]; then
    # The following options are one per line, mostly sorted so they are easy to diff compare to other gcc packages.
    local _conf=(
      --build="${CHOST}"
      --disable-libssp
      --disable-libstdcxx-pch
      --disable-libunwind-exceptions
      --disable-multilib
      --disable-werror
      --enable-__cxa_atexit
      --enable-cet='auto'
      --enable-checking='release'
      --enable-clocale='gnu'
      --enable-default-pie
      --enable-default-ssp
      --enable-gnu-indirect-function
      --enable-gnu-unique-object
      --enable-languages='c,c++,fortran,lto'
      --enable-linker-build-id
      --enable-lto
      --enable-plugin
      --enable-shared
      --enable-threads='posix'
      --enable-version-specific-runtime-libs
      --infodir='/usr/share/info'
      --libdir='/usr/lib'
      --libexecdir='/usr/lib'
      --mandir='/usr/share/man'
      --program-suffix="-${_majorver}"
      --with-bugurl="https://aur.archlinux.org/packages/${pkgname}/"
      --with-isl
      --with-linker-hash-style='gnu'
      --with-pkgversion="Arch Linux ${pkgver}-${pkgrel}"
      --with-system-zlib
      --prefix='/usr'
    )
    ../configure "${_conf[@]}"

    #sed -e 's/^STAGE1_CXXFLAGS.*$/& -std=gnu++11/' -i 'Makefile'
  fi

  # The system stdc must be used when gcc links to some system libraries.
  LD_PRELOAD='/usr/lib/libstdc++.so' \
  nice -n1 make -s

  set +u; msg 'Compile complete'; set -u

  # make documentation
  make -s -j1 -C "${CHOST}/libstdc++-v3/doc" 'doc-man-doxygen'
  set +u
}

check_disabled() {
  set -u
  cd "${_basedir}/gcc-build"

  # disable libphobos test to avoid segfaults and other unfunny ways to waste my time
  sed -e '/maybe-check-target-libphobos \\/d' -i 'Makefile'

  # do not abort on error as some are "expected"
  make -O -k check || :
  ../contrib/test_summary
  set +u
}

package_gcc10-libs() {
  set -u
  pkgdesc="Runtime libraries shipped by GCC (${_majorver}.x.x)"
  depends=('glibc>=2.27')
  options=('!emptydirs' '!strip')
  provides=("libgfortran.so=${pkgver}" "libubsan.so=${pkgver}" "libasan.so=${pkgver}" "libtsan.so=${pkgver}" "liblsan.so=${pkgver}")

  cd "${_basedir}/gcc-build"
  LD_PRELOAD='/usr/lib/libstdc++.so' \
  make -j1 -s -C "${CHOST}/libgcc" DESTDIR="${pkgdir}" 'install-shared'
  local _libdir; _fn_setlibdir
  mv "${pkgdir}/${_libdir}/../lib"/* "${pkgdir}/${_libdir}"
  rmdir "${pkgdir}/${_libdir}/../lib"
  rm -f "${pkgdir}/${_libdir}/libgcc_eh.a"

  local _lib _libs=(
    libatomic
    libgfortran
    libgomp
    libitm
    libquadmath
    libsanitizer/{a,l,ub,t}san
    libstdc++-v3/src
    libvtv
  )
  for _lib in "${_libs[@]}"; do
    make -j1 -s -C "${CHOST}/${_lib}" DESTDIR="${pkgdir}" 'install-toolexeclibLTLIBRARIES'
  done

  make -j1 -s -C "${CHOST}/libstdc++-v3/po" DESTDIR="${pkgdir}" install

  # Install Runtime Library Exception
  install -Dpm644 '../COPYING.RUNTIME' \
    "${pkgdir}/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION"

  # remove conflicting files
  rm -rf "${pkgdir}/usr/share/locale"
  set +u
}

package_gcc10() {
  set -u
  pkgdesc="The GNU Compiler Collection - C and C++ frontends (${_majorver}.x.x)"
  depends=("${pkgbase}-libs=${pkgver}-${pkgrel}" 'binutils>=2.28' 'libmpc' 'zstd')
  options=('!emptydirs' 'staticlibs')

  cd "${_basedir}/gcc-build"

  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'install-driver' 'install-cpp' 'install-gcc-ar' \
    'c++.install-common' 'install-headers' 'install-plugin' 'install-lto-wrapper'

  local _libdir; _fn_setlibdir
  install -m755 -t "${pkgdir}/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1,gcov{,-tool}}

  make -j1 -s -C "${CHOST}/libgcc" DESTDIR="${pkgdir}" install
  rm -rf "${pkgdir}/${_libdir}/../lib"

  make -j1 -s -C "${CHOST}/libstdc++-v3/src" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/include" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/libsupc++" DESTDIR="${pkgdir}" install
  make -j1 -s -C "${CHOST}/libstdc++-v3/python" DESTDIR="${pkgdir}" install
  rm -f "${pkgdir}/${_libdir}/"libstdc++.so*

  make -j1 -s DESTDIR="${pkgdir}" 'install-fixincludes'
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'install-mkheaders'

  make -j1 -s -C 'lto-plugin' DESTDIR="${pkgdir}" install
  install -dm755 "${pkgdir}/${_libdir}/bfd-plugins/"
  ln -s "/${_libdir}/liblto_plugin.so" \
    "${pkgdir}/${_libdir}/bfd-plugins/"

  make -j1 -s -C "${CHOST}/libgomp" DESTDIR="${pkgdir}" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -j1 -s -C "${CHOST}/libitm" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'
  make -j1 -s -C "${CHOST}/libquadmath" DESTDIR="${pkgdir}" 'install-nodist_libsubincludeHEADERS'
  make -j1 -s -C "${CHOST}/libsanitizer" DESTDIR="${pkgdir}" install-nodist_{saninclude,toolexeclib}HEADERS
  make -j1 -s -C "${CHOST}/libsanitizer/asan" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'
  make -j1 -s -C "${CHOST}/libsanitizer/tsan" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'
  make -j1 -s -C "${CHOST}/libsanitizer/lsan" DESTDIR="${pkgdir}" 'install-nodist_toolexeclibHEADERS'

  make -j1 -s -C 'libcpp' DESTDIR="${pkgdir}" install
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'install-po'

  # many packages expect this symlink
  ln -s "gcc-${_majorver}" "${pkgdir}/usr/bin/cc-${_majorver}"

  # POSIX conformance launcher scripts for c89 and c99
  install -Dm755 "${srcdir}/c89" "${pkgdir}/usr/bin/c89-${_majorver}"
  install -Dm755 "${srcdir}/c99" "${pkgdir}/usr/bin/c99-${_majorver}"

  # byte-compile python libraries
  python -m 'compileall' "${pkgdir}/usr/share/gcc-${pkgver%%+*}/"
  python -O -m 'compileall' "${pkgdir}/usr/share/gcc-${pkgver%%+*}/"

  # Install Runtime Library Exception
  install -d "${pkgdir}/usr/share/licenses/${pkgname}/"
  ln -s "/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION" \
    "${pkgdir}/usr/share/licenses/${pkgname}/"

  # Remove conflicting files
  rm -rf "${pkgdir}/usr/share/locale"
  set +u
}

package_gcc10-fortran() {
  set -u
  pkgdesc="Fortran front-end for GCC (${_majorver}.x.x)"
  depends=("${pkgbase}=${pkgver}-${pkgrel}")

  cd "${_basedir}/gcc-build"
  make -j1 -s -C "${CHOST}/libgfortran" DESTDIR="${pkgdir}" 'install-cafexeclibLTLIBRARIES' \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -j1 -s -C "${CHOST}/libgomp" DESTDIR="${pkgdir}" 'install-nodist_fincludeHEADERS'
  make -j1 -s -C 'gcc' DESTDIR="${pkgdir}" 'fortran.install-common'
  local _libdir; _fn_setlibdir
  install -Dm755 'gcc/f951' "${pkgdir}/${_libdir}/f951"

  ln -s "gfortran-${_majorver}" "${pkgdir}/usr/bin/f95-${_majorver}"

  # Install Runtime Library Exception
  install -d "${pkgdir}/usr/share/licenses/${pkgname}/"
  ln -s "/usr/share/licenses/${pkgbase}-libs/RUNTIME.LIBRARY.EXCEPTION" \
    "${pkgdir}/usr/share/licenses/${pkgname}/"
  set +u
}
set +u
